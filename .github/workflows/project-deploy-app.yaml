name: Launch Dev Environment

on:
  workflow_dispatch:
    inputs:
      base_image:
        description: "Base image"
        required: true
        default: "vallher/py2py3r:sha-4e47477"
      packages:
        description: "Comma-separated packages"
        required: false
        default: "numpy,pandas"
      cpu:
        description: "CPU request"
        required: true
        default: "50m"
      memory:
        description: "Memory request"
        required: true
        default: "20Mi"
      team:
        description: "Team/project tag"
        required: false
        default: "team-a"
        type: choice
        options:
          - team-a
          - team-b

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set_tag.outputs.IMAGE_TAG }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker tag from short SHA
        id: set_tag
        run: |
          IMAGE_TAG="sha-$(echo $GITHUB_SHA | cut -c1-7)"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ./project/docker/dev-env
          push: false
          load: true
          tags: vallher/dev-env:${{ env.IMAGE_TAG }}
          build-args: |
            BASE_IMAGE=${{ github.event.inputs.base_image }}
            PACKAGES=${{ github.event.inputs.packages }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: vallher/dev-env:${{ env.IMAGE_TAG }}
          format: table
          severity: CRITICAL
          exit-code: 1
          output: trivy-report.json
          trivyignores: project/docker/dev-env/.trivyignore

      - name: Upload Trivy scan report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-${{ env.IMAGE_TAG }}
          path: trivy-report.json
          retention-days: 5

      - name: Push image
        run: docker push vallher/dev-env:${{ env.IMAGE_TAG }}

#      - name: Install Helm
#        uses: azure/setup-helm@v3
#
#      - name: Deploy dev env with Helm
#        run: |
#          helm upgrade --install dev-env-${{ github.run_id }} ./charts/dev-env \
#            --namespace dev-environments \
#            --create-namespace \
#            --set image=${{ github.event.inputs.base_image }} \
#            --set packages=${{ github.event.inputs.packages }} \
#            --set resources.cpu=${{ github.event.inputs.cpu }} \
#            --set resources.memory=${{ github.event.inputs.memory }} \
#            --set resources.gpu=${{ github.event.inputs.gpu }} \
#            --set user=${{ github.event.inputs.user }} \
#            --set team=${{ github.event.inputs.team }}
